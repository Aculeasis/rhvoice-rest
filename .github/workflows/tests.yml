name: Tests

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    env:
      PYTHONUNBUFFERED: 1
      THREADED: 4
      CHUNKED_TRANSFER: ${{ matrix.CHUNKED_TRANSFER }}
      RHVOICE_DYNCACHE: ${{ matrix.RHVOICE_DYNCACHE }}
      RHVOICE_FCACHE: ${{ matrix.RHVOICE_FCACHE }}
      RHVOICE_FCACHE_LIFETIME: ${{ matrix.RHVOICE_FCACHE_LIFETIME }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: ubuntu-20.04
            CHUNKED_TRANSFER: true
          - os: ubuntu-20.04
            RHVOICE_DYNCACHE: true
          - os: ubuntu-20.04
            RHVOICE_FCACHE: true
          - os: ubuntu-20.04
            RHVOICE_FCACHE: true
            RHVOICE_FCACHE_LIFETIME: 1

          - os: windows-2019
            THREADED: 1
          - os: windows-2019
            CHUNKED_TRANSFER: true
          - os: windows-2019
            RHVOICE_DYNCACHE: true
          - os: windows-2019
            RHVOICE_FCACHE: true
          - os: windows-2019
            RHVOICE_FCACHE: true
            RHVOICE_FCACHE_LIFETIME: 1

    steps:
    - uses: actions/checkout@v2
    - name: Set THREADED=${{ matrix.THREADED }} on Windows
      if: ${{ matrix.THREADED != '' && matrix.os == 'windows-2019'}}
      run: echo "THREADED=${{ matrix.THREADED }}" >> $env:GITHUB_ENV

    - name: Prepare on Linux
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        docker --version
        docker build -t aculeasis/rhvoice-rest-test:amd64 -f Dockerfile.amd64 .
        docker run -d -p 8080:8080 -e THREADED -e RHVOICE_FCACHE_LIFETIME \
        -e RHVOICE_FCACHE -e RHVOICE_DYNCACHE -e CHUNKED_TRANSFER --name rhvoice-rest aculeasis/rhvoice-rest-test:amd64
        sleep 5
        docker images
        docker ps -a
        docker logs rhvoice-rest
        pip install aiohttp
    - name: Prepare on Windows
      if: ${{ matrix.os == 'windows-2019' }}
      run: |
        pip install -q --upgrade wheel
        pip install -q -r requirements.txt
        pip install -q rhvoice-wrapper-bin aiohttp --only-binary rhvoice-wrapper-bin
        git clone -q --depth=1 https://github.com/vantu5z/RHVoice-dictionary
        xcopy /s /I /Q RHVoice-dictionary\tools\preprocessing rhvoice_tools

    - name: Tests on Linux
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: python -u example/threaded_test.py 16
    - name: Test on Windows
      if: ${{ matrix.os == 'windows-2019' }}
      run: |
        $MyProcess = Start-Process "python" -ArgumentList "-u","app.py" -RedirectStandardOutput "logs" -PassThru
        Start-Sleep -s 5
        python -u example/threaded_test.py 16

    - name: Result on Linux
      continue-on-error: true
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        docker stop rhvoice-rest
        docker logs rhvoice-rest
        docker ps -a
    - name: Result on Windows
      continue-on-error: true
      if: ${{ matrix.os == 'windows-2019' }}
      run: type logs
#      run: |
#        Stop-Process -Id $MyProcess.Id
#        type logs
